<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="UserMapper" >
	<select id="queryCombobox" resultType="User">
		select userId,userName
		from T_User
	</select>
	<!-- 根据编号查询 -->
	<select id="loadByUserCode" parameterType="String" resultType="User">
		select *
		from T_User
		where userCode=#{userCode}
	</select>
	<!-- 根据userId查询 -->
	<select id="loadByUserId" parameterType="Integer" resultType="User">
		select *
		from T_User
		where userId=#{userId}
	</select>
	<!-- 分页查询查询 -->
	<select id="query" parameterType="User" resultType="User">
		select *
		from T_User
		where 1 = 1  
		<if test="userCode != null and userCode !=''">
			and userCode like '%${userCode}%'
		</if>
		<if test="userName != null and userName !=''">
			and userName like '%${userName}%'
		</if>
	</select>
	<!-- 统计 -->
	<select id="count" parameterType="User" resultType="Long">
		select count(1)
		from T_User
		where 1 = 1  
		<if test="userCode != null and userCode !=''">
			and userCode like '%${userCode}%'
		</if>
		<if test="userName != null and userName !=''">
			and userName like '%${userName}%'
		</if>
	</select>
	<!-- 根据用户编号，用户密码查询用户 -->
	<select id="login" parameterType="User" resultType="User">
		select *
		from T_User
		where userCode=#{userCode} and passwords =#{passwords} 
	</select>
	<select id="getChildrenUrlRightTreeNode" parameterType="java.util.Map" resultType="Right">
		select a.rightId,b.rightName,b.rightUrl,case when a.countChildren>0 then 0 else 1 end isLeaf
		from(select a.rightId,count(b.rightId) countChildren
			from (select distinct a.rightId 
				from(select a.rightId
					from t_right a
					where a.parentRightId = #{rightId} and a.`status` = 1 and a.rightKind=1)a
				left join(select a.roleId
					from(select roleId
						from t_userrole 
						where userId = #{userId})a
						left join t_role b on a.roleId = b.roleId and b.`status` = 1
						where b.`status`=1)b on 1=1
				left join t_roleright c on a.rightId = c.rightId and b.roleId=c.roleId and c.`status`=1
				where c.`status`=1) a
			left join t_right b on a.rightId=b.parentRightId and b.`status`=1 and b.rightKind=1
			left join(select a.roleId
				from(select roleId
					from t_userrole 
					where userId = #{userId})a
					left join t_role b on a.roleId = b.roleId and b.`status` = 1
					where b.`status`=1)c on 1=1
			left join t_roleright d on b.rightId = d.rightId and c.roleId=d.roleId and d.`status`=1
			group by a.rightId)a
		left join t_right b on a.rightId=b.rightId and b.rightKind=1
		order by b.array
	</select>
	<!-- 插入 -->
	<insert id="insert" parameterType="User" useGeneratedKeys="true" keyProperty="userId">
	   insert into t_user (userCode, userName, 
	     passwords,status)
	   values ( #{userCode,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
	     #{passwords,jdbcType=VARCHAR},#{status,jdbcType=INTEGER})
	</insert>
	<!-- 更新 -->  
	<update id="update" parameterType="User" >
	  update t_user
	  set userCode = #{userCode,jdbcType=VARCHAR},
	    userName = #{userName,jdbcType=VARCHAR},status=#{status,jdbcType=INTEGER}
	  where userId = #{userId,jdbcType=INTEGER}
	</update>
	<!-- 更新状态 -->  
	<update id="updateStatus" parameterType="User" >
	  	update t_user 
		set status = #{status}
		where userId = #{userId}
	</update>
	<!-- 删除 -->
	<delete id="delete" parameterType="Integer" >
	  delete from t_user
	  where userId = #{userId,jdbcType=INTEGER}
	</delete>
</mapper>